# export env variable
export VERILATOR_ROOT="/usr/local/bin"
export SHIM="$HOME/.pyenv/shims"
export VCPKG_ROOT="$HOME/app/vcpkg"
export HEXO="$HOME/app/hexo/node_modules/.bin"
export LOCAL="$HOME/.local/bin"
export CXX="/usr/bin/g++"
export BIN="/usr/local/bin"
export CURL_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt"
export PYENV_PLUGIN="$HOME/.pyenv/plugins"
export NINJA="/usr/bin/ninja"
export FREETYPE_PROPERTIES="cff:no-stem-darkening=0 autofitter:no-stem-darkening=0"
# export JAVAC_HOME="/usr/lib/jvm/java-23-openjdk/bin"
# export QSYS_ROOTDIR="/home/poem/.cache/paru/clone/quartus-free/pkg/quartus-free-quartus/opt/intelFPGA/23.1/quartus/sopc_builder/bin"
# export NPC_HOME=/home/poem/app/github/ysyx-workbench/npc
# export AM_HOME=/home/poem/app/github/ysyx-workbench/abstract-machine
# export NEMU_HOME=/home/poem/app/github/ysyx-workbench/nemu

# ccache
# export CC="ccache gcc"
# export CXX="ccache g++"
# export CCACHE_MAXSIZE=10G
# export CCACHE="/usr/lib/ccache/bin"
# export CCACHE_DIR=".ccache"

# proxy
# export http_proxy="http://127.0.0.1:7897"
# export https_proxy="http://127.0.0.1:7897"
export all_proxy="http://127.0.0.1:7890"
# export NO_PROXY="localhost,127.0.0.1,192.168.0.0/16,10.0.0.0/8,::1"
# export GITHUB_PROXY="https://moeyy.cn/gh-proxy"
# export http_proxy="http://192.168.43.1:7890"
# export https_proxy="http://192.168.43.1:7890"

# help seek exe; if not add them to PATH, then can not use them in command
export PATH="$PATH:$VERILATOR_ROOT:$SHIM:$VCPKG_ROOT:$HEXO:$LOCAL:$CXX:$BIN:$CURL_CA_BUNDLE:$PYENV_PLUGIN"

# env variable
ZSH=/usr/share/oh-my-zsh/
ZSH_CACHE_DIR=$HOME/.cache/oh-my-zsh
if [[ ! -d $ZSH_CACHE_DIR ]]; then
  mkdir -p $ZSH_CACHE_DIR
fi

# xmake
test -f "/home/poem/.xmake/profile" && source "/home/poem/.xmake/profile"

# plugins
plugins=(
    git
    autojump
    colorize
)

# ======================= ZSH SCRIPT ACTIVATE ===============================

source $ZSH/oh-my-zsh.sh
source ~/app/scripts/autojump.sh
source ~/app/scripts/start-project.sh
source ~/app/scripts/flamegraph.sh
source ~/app/scripts/color-test.sh

# cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor

# daily use
alias ..="cd .."
alias l="eza -la"
alias make="make -j $(nproc)"
alias open="xdg-open"
alias vi="nvim"
alias du="du -h"
alias lg="lazygit"
alias cl="clear"
alias q="exit"
alias dmesg="sudo dmesg"
alias del="rm -rf"
alias mv="mv -i"
alias his="history"
alias hexo_="hexo clean && hexo generate && hexo server"
alias cpp-format="cat ~/app/scripts/clang-format-template > ./.clang-format"
alias addclangd='echo -e "# .clangd\nCompileFlags:\n  Remove: [-mno-direct-extern-access]" >> .clangd'
alias cmb="cmake -B build && cmake --build build"
alias e="x mankier e"
# alias copy="xclip -selection clipboard"
alias -g copy="| col -b | wl-copy"
alias -g back="| tee /tmp/back.txt"
alias font="fc-cache -vf"
alias fc="fc -s"
alias late="fc -l -1 | col -b | tee >(wl-copy)"
alias download="aria2c -x16 -s16 --min-split-size=1M -j16 -c --summary-interval=5 -d=~/Downloads/"

# configuration

## normal configuration
# alias zshc="cp ~/.zshrc /tmp/zshrc && nvim ~/.zshrc && source ~/.zshrc"
alias zshc="cp ~/.zshrc /tmp/zshrc && chezmoi edit ~/.zshrc --apply && source ~/.zshrc"
alias omzc="nvim ~/.oh-my-zsh && source ~/.zshrc"
alias vimc="nvim ~/.vimrc && source ~/.vimrc"
alias tmuxc="nvim ~/.tmux.conf && source ~/.tmux.conf 2>/dev/null"
alias gitc="nvim ~/.gitconfig"
alias gdbc="nvim ~/.gdbinit"
alias bashc="nvim ~/.bashrc"
alias hyprc="cd ~/.config/hypr/ && nvim ."
alias kittyc="cd ~/.config/kitty/ && nvim ."
alias zellijc="nvim ~/.config/zellij/"
alias nvimc="nvim ~/.config/nvim/"
# alias bashc="chezmoi edit ~/.zshrc --apply"
alias chec="nvim ~/.config/chezmoi/chezmoi.toml"
alias chezmoic="chezmoi edit-config"
alias ipython="acti && act crystal13 && ipython"
alias scriptc="chezmoi edit ~/app/scripts/ --apply && source ~/.zshrc"

## cpp configuration
alias Bcmake="cmake -B build"
alias bcmake="cmake --build build 2>&1 | tee build/build.log"

## pacman configuration
alias qs="pacman -Qs"
alias get="sudo pacman -S"
alias syu="sudo pacman -Syu --quiet --noconfirm 2>/dev/null"
alias ss="pacman -Ss"
alias ql="pacman -Ql"
alias pacmanc="sudo /home/poem/.local/bin/lvim /etc/pacman.conf"
alias scc="sudo pacman -Scc --noconfirm && paru -Scc --noconfirm && sudo rm -rf /boot/initramfs-linux-fallback.img"

## miniconda configuration
export CRYPTOGRAPHY_OPENSSL_NO_LEGACY=1
alias acti="source /opt/miniconda3/bin/activate"
alias act="conda activate"

## docker configuration
alias docker-start="sudo systemctl start docker.socket"
alias docker-stop="sudo systemctl stop docker.socket"

alias rv64="riscv64-linux-gnu-gcc"
alias tmuxn="tmux attach -t '1' || tmux new -s '1'"
alias remake="rm -rf build && cmake --preset native -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_CXX_COMPILER=/usr/bin/g++ && cmake --build --preset native-release"
alias rebuild="cmake --build build -j $(nproc)"
alias kills="tmux kill-session -t"
alias make_llvm='cmake -DLLVM_ENABLE_PROJECTS="clang;lld;llvm" -DCMAKE_BUILD_TYPE=Debug -G "Unix Makefiles" ../llvm'
alias difflog="make --debug=v > file1.log && make -d > file2.log && vimdiff file1.log file2.log && rm -rf file1.log file2.log"

# quick template
alias cpp20="~/app/scripts/template-cpp-20.sh && cd test && cpp-format"

# =========================== ZSH VI MODE ========================================
# vi mode
bindkey -v

## show -- NORMAL -- or -- INSERT --
function zle-line-init zle-keymap-select {
    RPS1="${${KEYMAP/vicmd/-- NORMAL --}/(main|viins)/-- INSERT --}"
    RPS2=$RPS1
    zle reset-prompt
}

mang() {
    man "$1" | col -b > "/tmp/$1.txt" && google-chrome "/tmp/$1.txt"
}

setopt no_nomatch
# ====================================================================

if [ -f /etc/asound.state ]; then
  sudo alsactl restore
fi

# 如果使用通配符但没有匹配到任何文本 Zsh不会报错 而是保留原始的通配符文本
# eval "$(curl -s https://get.x-cmd.com)"
export STARSHIP_CONFIG=~/.config/starship.toml
eval "$(starship init zsh)"
